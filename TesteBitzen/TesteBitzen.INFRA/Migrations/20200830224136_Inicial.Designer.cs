// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TesteBitzen.INFRA.Context;

namespace TesteBitzen.INFRA.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200830224136_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TesteBitzen.DOMAIN.Entities.Abastecimento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("AnoAbastecimento")
                        .HasColumnType("smallint");

                    b.Property<short>("DiaAbastecimento")
                        .HasColumnType("smallint");

                    b.Property<int>("KmAbastecimento")
                        .HasColumnType("integer");

                    b.Property<decimal>("LitrosAbastecidos")
                        .HasColumnType("numeric(8,2)");

                    b.Property<short>("MesAbastecimento")
                        .HasColumnType("smallint");

                    b.Property<string>("PostoCombustivel")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120);

                    b.Property<int>("QuilometrosRodados")
                        .HasColumnType("int");

                    b.Property<string>("TipoCombustivel")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ValorAbastecimento")
                        .HasColumnType("numeric(8,2)");

                    b.Property<Guid>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("VeiculoId");

                    b.ToTable("Abastecimento");
                });

            modelBuilder.Entity("TesteBitzen.DOMAIN.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120);

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(120)")
                        .HasMaxLength(120);

                    b.Property<string>("Senha")
                        .HasColumnType("varchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("TesteBitzen.DOMAIN.Entities.Veiculo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("Ano")
                        .HasColumnType("smallint");

                    b.Property<string>("Combustivel")
                        .HasColumnType("varchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Foto")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Marca")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Modelo")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Placa")
                        .HasColumnType("varchar(8)")
                        .HasMaxLength(8);

                    b.Property<int>("QuilometragemCadastro")
                        .HasColumnType("integer");

                    b.Property<int>("QuilometragemRodada")
                        .HasColumnType("integer");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Veiculo");
                });

            modelBuilder.Entity("TesteBitzen.DOMAIN.Entities.Abastecimento", b =>
                {
                    b.HasOne("TesteBitzen.DOMAIN.Entities.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TesteBitzen.DOMAIN.Entities.Veiculo", "Veiculo")
                        .WithMany("Abastecimentos")
                        .HasForeignKey("VeiculoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("TesteBitzen.DOMAIN.Entities.Veiculo", b =>
                {
                    b.HasOne("TesteBitzen.DOMAIN.Entities.Usuario", "Usuario")
                        .WithMany("Veiculos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
